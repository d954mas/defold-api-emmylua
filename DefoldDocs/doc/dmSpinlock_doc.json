{
  "elements": [
    {
      "type": "TYPEDEF",
      "name": "dmSpinlock::Spinlock",
      "brief": "Spinlock type definition",
      "description": "<div class=\"codehilite\"><pre><span></span><code><span class=\"k\">typedef</span><span class=\"w\"> </span><span class=\"o\">&lt;</span><span class=\"p\">..</span><span class=\"n\">native</span><span class=\"w\"> </span><span class=\"n\">type</span><span class=\"p\">..</span><span class=\"o\">&gt;</span><span class=\"w\"> </span><span class=\"n\">Spinlock</span><span class=\"p\">;</span><span class=\"w\"></span>\n</code></pre></div>",
      "returnvalues": [],
      "parameters": [],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "dmSpinlock::Init",
      "brief": "initalize spinlock.",
      "description": "Initialize a Spinlock",
      "returnvalues": [],
      "parameters": [
        {
          "name": "spinlock",
          "doc": "spinlock to initialize.",
          "types": [
            "dmSpinlock::Spinlock*"
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "dmSpinlock::Lock",
      "brief": "lock spinlock.",
      "description": "Lock a Spinlock",
      "returnvalues": [],
      "parameters": [
        {
          "name": "spinlock",
          "doc": "spinlock to lock.",
          "types": [
            "dmSpinlock::Spinlock*"
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "dmSpinlock::Unlock",
      "brief": "unlock spinlock.",
      "description": "Unlock a Spinlock",
      "returnvalues": [],
      "parameters": [
        {
          "name": "spinlock",
          "doc": "spinlock to unlock.",
          "types": [
            "dmSpinlock::Spinlock*"
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "MACRO",
      "name": "DM_SPINLOCK_SCOPED_LOCK",
      "brief": "macro for using a spinlock during a scope",
      "description": "Will lock a Spinlock and automatically unlock it at the end of the scope.",
      "returnvalues": [],
      "parameters": [
        {
          "name": "mutex",
          "doc": "Spinlock reference to lock.",
          "types": [
            "dmSpinlock::Spinlock"
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    }
  ],
  "info": {
    "namespace": "dmSpinlock",
    "name": "Spinlock",
    "brief": "SDK Spinlock API documentation",
    "description": "API for platform independent spinlock synchronization primitive.",
    "path": "engine/dlib/src/dmsdk/dlib/spinlock.h",
    "file": "dmsdk/dlib/spinlock.h",
    "notes": [],
    "group": "DEFOLD SDK"
  }
}