{
  "elements": [
    {
      "type": "ENUM",
      "name": "dmSSLSocket::Result",
      "brief": "result enumeration",
      "description": "Result enumeration.",
      "returnvalues": [],
      "parameters": [],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [
        {
          "name": "dmSSLSocket::RESULT_OK",
          "doc": "(0)",
          "type": ""
        },
        {
          "name": "dmSSLSocket::RESULT_SSL_INIT_FAILED",
          "doc": "(-2000)",
          "type": ""
        },
        {
          "name": "dmSSLSocket::RESULT_HANDSHAKE_FAILED",
          "doc": "(-2001)",
          "type": ""
        },
        {
          "name": "dmSSLSocket::RESULT_WOULDBLOCK",
          "doc": "(-2002)",
          "type": ""
        },
        {
          "name": "dmSSLSocket::RESULT_CONNREFUSED",
          "doc": "(-2003)",
          "type": ""
        }
      ],
      "notes": []
    },
    {
      "type": "TYPEDEF",
      "name": "Socket",
      "brief": "Socket type definition",
      "description": "Socket type definition",
      "returnvalues": [],
      "parameters": [],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "VARIABLE",
      "name": "dmSSLSocket::INVALID_SOCKET_HANDLE",
      "brief": "SSLSocket socket handle",
      "description": "SSLSocket socket handle",
      "returnvalues": [],
      "parameters": [],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "dmSSLSocket::New",
      "brief": "create a secure socket",
      "description": "Create a new secure socket",
      "returnvalues": [
        {
          "name": "RESULT_OK",
          "doc": "on succcess",
          "types": [
            ""
          ]
        }
      ],
      "parameters": [
        {
          "name": "socket",
          "doc": "The socket to wrap",
          "types": [
            "dmSocket::Socket"
          ]
        },
        {
          "name": "host",
          "doc": "The name of the host (e.g. \"httpbin.org\")",
          "types": [
            "const char*"
          ]
        },
        {
          "name": "timeout",
          "doc": "The timeout for the handshake procedure. (microseconds)",
          "types": [
            "uint64_t"
          ]
        },
        {
          "name": "sslsocket",
          "doc": "Pointer to a secure socket",
          "types": [
            "dmSSLSocket::Socket*"
          ]
        }
      ],
      "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">Result</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">Socket</span><span class=\"w\"> </span><span class=\"n\">sslsocket</span><span class=\"p\">;</span><span class=\"w\"></span>\n<span class=\"n\">result</span><span class=\"w\"> </span><span class=\"o\">=</span><span class=\"w\"> </span><span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">New</span><span class=\"p\">(</span><span class=\"n\">socket</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"s\">&quot;httpbin.org&quot;</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"mi\">500</span><span class=\"o\">*</span><span class=\"mi\">1000</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"o\">&amp;</span><span class=\"n\">sslsocket</span><span class=\"p\">);</span><span class=\"w\"></span>\n<span class=\"k\">if</span><span class=\"w\"> </span><span class=\"p\">(</span><span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">RESULT_OK</span><span class=\"w\"> </span><span class=\"o\">==</span><span class=\"w\"> </span><span class=\"n\">result</span><span class=\"p\">)</span><span class=\"w\"></span>\n<span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span><span class=\"w\"> </span><span class=\"k\">else</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\"></span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"p\">}</span><span class=\"w\"></span>\n</code></pre></div>",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "dmSSLSocket::Delete",
      "brief": "delete a secure socket",
      "description": "Delete a secure socket. Does not close the underlying socket",
      "returnvalues": [
        {
          "name": "RESULT_OK",
          "doc": "on success",
          "types": [
            ""
          ]
        }
      ],
      "parameters": [
        {
          "name": "socket",
          "doc": "Secure socket to close",
          "types": [
            "dmSSLSocket::Socket"
          ]
        }
      ],
      "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"n\">dmSSLSocket</span><span class=\"o\">::</span><span class=\"n\">Delete</span><span class=\"p\">(</span><span class=\"n\">sslsocket</span><span class=\"p\">);</span><span class=\"w\"></span>\n</code></pre></div>",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "dmSSLSocket::Send",
      "brief": "send a message on a secure socket",
      "description": "Send a message on a secure socket",
      "returnvalues": [
        {
          "name": "RESULT_OK",
          "doc": "on success",
          "types": [
            ""
          ]
        }
      ],
      "parameters": [
        {
          "name": "socket",
          "doc": "SSL socket to send a message on",
          "types": [
            "dmSSLSocket::Socket"
          ]
        },
        {
          "name": "buffer",
          "doc": "Buffer to send",
          "types": [
            ""
          ]
        },
        {
          "name": "length",
          "doc": "Length of buffer to send",
          "types": [
            ""
          ]
        },
        {
          "name": "sent_bytes",
          "doc": "Number of bytes sent (result)",
          "types": [
            ""
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "dmSSLSocket::Receive",
      "brief": "receive data on a secure socket",
      "description": "Receive data on a secure socket",
      "returnvalues": [
        {
          "name": "RESULT_OK",
          "doc": "on success",
          "types": [
            ""
          ]
        }
      ],
      "parameters": [
        {
          "name": "socket",
          "doc": "Socket to receive data on",
          "types": [
            "dmSSLSocket::Socket"
          ]
        },
        {
          "name": "buffer",
          "doc": "Buffer to receive to",
          "types": [
            ""
          ]
        },
        {
          "name": "length",
          "doc": "Receive buffer length",
          "types": [
            ""
          ]
        },
        {
          "name": "received_bytes",
          "doc": "Number of received bytes (result)",
          "types": [
            ""
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "dmSocket::SetReceiveTimeout",
      "brief": "Set socket receive timeout",
      "description": "Set socket receive timeout",
      "returnvalues": [
        {
          "name": "RESULT_OK",
          "doc": "on success",
          "types": [
            ""
          ]
        }
      ],
      "parameters": [
        {
          "name": "socket",
          "doc": "socket",
          "types": [
            "dmSocket::Socket"
          ]
        },
        {
          "name": "timeout",
          "doc": "timeout in microseconds",
          "types": [
            "uint64_t"
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": [
        "Timeout resolution might be in milliseconds, e.g. windows. Use values\n      larger than or equal to 1000"
      ]
    }
  ],
  "info": {
    "namespace": "dmSSLSocket",
    "name": "SSLSocket",
    "brief": "SDK Secure socket API documentation",
    "description": "Secure socket functions.",
    "path": "engine/dlib/src/dmsdk/dlib/sslsocket.h",
    "file": "dmsdk/dlib/sslsocket.h",
    "notes": [],
    "group": "DEFOLD SDK"
  }
}