{
  "elements": [
    {
      "type": "MACRO",
      "name": "DM_DEBUG",
      "brief": "define for debug builds",
      "description": "define for debug builds",
      "returnvalues": [],
      "parameters": [],
      "examples": "Only enable code in debug builds\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#if defined(DM_DEBUG)</span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"cp\">#endif</span>\n</code></pre></div>",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "MACRO",
      "name": "DM_RELEASE",
      "brief": "define for release builds",
      "description": "define for release builds",
      "returnvalues": [],
      "parameters": [],
      "examples": "Only enable code in release builds\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#if defined(DM_RELEASE)</span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"cp\">#endif</span>\n</code></pre></div>",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "MACRO",
      "name": "DM_HEADLESS",
      "brief": "define for headless builds",
      "description": "define for headless builds",
      "returnvalues": [],
      "parameters": [],
      "examples": "Only enable code in headless builds\n<div class=\"codehilite\"><pre><span></span><code><span class=\"cp\">#if defined(DM_HEADLESS)</span>\n<span class=\"w\">    </span><span class=\"c1\">// ...</span>\n<span class=\"cp\">#endif</span>\n</code></pre></div>",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "GetConfigFile",
      "brief": "get the config file",
      "description": "get the config file",
      "returnvalues": [
        {
          "name": "config",
          "doc": "The game project config file",
          "types": [
            "dmConfigFile::HConfig"
          ]
        }
      ],
      "parameters": [
        {
          "name": "app_params",
          "doc": "The app params sent to the extension dmExtension::AppInitialize / dmExtension::AppInitialize",
          "types": [
            "dmExtension::AppParams*"
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "GetWebServer",
      "brief": "get the web server handle",
      "description": "get the web server handle",
      "returnvalues": [
        {
          "name": "server",
          "doc": "The web server handle",
          "types": [
            "dmWebServer::HServer"
          ]
        }
      ],
      "parameters": [
        {
          "name": "app_params",
          "doc": "The app params sent to the extension dmExtension::AppInitialize / dmExtension::AppInitialize",
          "types": [
            "dmExtension::AppParams*"
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": [
        "Only valid in debug builds"
      ]
    },
    {
      "type": "FUNCTION",
      "name": "GetGameObjectRegister",
      "brief": "get the game object register",
      "description": "get the game object register",
      "returnvalues": [
        {
          "name": "register",
          "doc": "The game object register",
          "types": [
            "dmGameObject::HRegister"
          ]
        }
      ],
      "parameters": [
        {
          "name": "app_params",
          "doc": "The app params sent to the extension dmExtension::AppInitialize / dmExtension::AppInitialize",
          "types": [
            "dmExtension::AppParams*"
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "GetHIDContext",
      "brief": "get the hid context",
      "description": "get the hid context",
      "returnvalues": [
        {
          "name": "context",
          "doc": "The hid context",
          "types": [
            "dmHID::HContext"
          ]
        }
      ],
      "parameters": [
        {
          "name": "app_params",
          "doc": "The app params sent to the extension dmExtension::AppInitialize / dmExtension::AppInitialize",
          "types": [
            "dmExtension::AppParams*"
          ]
        }
      ],
      "examples": "",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    }
  ],
  "info": {
    "namespace": "dmEngine",
    "name": "Engine",
    "brief": "SDK Engine extension API documentation",
    "description": "SDK Engine extension API documentation",
    "path": "engine/dlib/src/dmsdk/engine/extension.h",
    "file": "dmsdk/engine/extension.h",
    "notes": [],
    "group": "DEFOLD SDK"
  }
}