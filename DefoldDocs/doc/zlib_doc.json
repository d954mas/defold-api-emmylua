{
  "elements": [
    {
      "type": "FUNCTION",
      "name": "zlib.inflate",
      "brief": "Inflate (decompress) a buffer",
      "description": "A lua error is raised is on error",
      "returnvalues": [
        {
          "name": "buf",
          "doc": "inflated buffer",
          "types": [
            "string"
          ]
        }
      ],
      "parameters": [
        {
          "name": "buf",
          "doc": "buffer to inflate",
          "types": [
            "string"
          ]
        }
      ],
      "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">local</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;</span><span class=\"se\">\\120\\94\\11\\201\\200\\44\\86\\0\\162\\68\\133\\226\\146\\162\\204\\188\\116\\133\\242\\204\\146\\12\\133\\210\\188\\228\\252\\220\\130\\162\\212\\226\\226\\212\\20\\133\\148\\196\\146\\68\\61\\0\\44\\67\\14\\201</span><span class=\"s2\">&quot;</span>\n<span class=\"kd\">local</span> <span class=\"n\">uncompressed_data</span> <span class=\"o\">=</span> <span class=\"n\">zlib</span><span class=\"p\">.</span><span class=\"n\">inflate</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">uncompressed_data</span><span class=\"p\">)</span> <span class=\"c1\">--&gt; This is a string with uncompressed data.</span>\n</code></pre></div>",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    },
    {
      "type": "FUNCTION",
      "name": "zlib.deflate",
      "brief": "Deflate (compress) a buffer",
      "description": "A lua error is raised is on error",
      "returnvalues": [
        {
          "name": "buf",
          "doc": "deflated buffer",
          "types": [
            "string"
          ]
        }
      ],
      "parameters": [
        {
          "name": "buf",
          "doc": "buffer to deflate",
          "types": [
            "string"
          ]
        }
      ],
      "examples": "<div class=\"codehilite\"><pre><span></span><code><span class=\"kd\">local</span> <span class=\"n\">data</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;This is a string with uncompressed data.&quot;</span>\n<span class=\"kd\">local</span> <span class=\"n\">compressed_data</span> <span class=\"o\">=</span> <span class=\"n\">zlib</span><span class=\"p\">.</span><span class=\"n\">deflate</span><span class=\"p\">(</span><span class=\"n\">data</span><span class=\"p\">)</span>\n<span class=\"kd\">local</span> <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"s2\">&quot;&quot;</span>\n<span class=\"kr\">for</span> <span class=\"n\">c</span> <span class=\"kr\">in</span> <span class=\"nb\">string.gmatch</span><span class=\"p\">(</span><span class=\"n\">compressed_data</span><span class=\"p\">,</span> <span class=\"s2\">&quot;.&quot;</span><span class=\"p\">)</span> <span class=\"kr\">do</span>\n    <span class=\"n\">s</span> <span class=\"o\">=</span> <span class=\"n\">s</span> <span class=\"o\">..</span> <span class=\"s1\">&#39;</span><span class=\"se\">\\\\</span><span class=\"s1\">&#39;</span> <span class=\"o\">..</span> <span class=\"nb\">string.byte</span><span class=\"p\">(</span><span class=\"n\">c</span><span class=\"p\">)</span>\n<span class=\"kr\">end</span>\n<span class=\"nb\">print</span><span class=\"p\">(</span><span class=\"n\">s</span><span class=\"p\">)</span> <span class=\"c1\">--&gt; \\120\\94\\11\\201\\200\\44\\86\\0\\162\\68\\133\\226\\146\\162 ...</span>\n</code></pre></div>",
      "replaces": "",
      "error": "",
      "tparams": [],
      "members": [],
      "notes": []
    }
  ],
  "info": {
    "namespace": "zlib",
    "name": "Zlib",
    "brief": "Zlib compression API documentation",
    "description": "Functions for compression and decompression of string buffers.",
    "path": "",
    "file": "",
    "notes": [],
    "group": "SCRIPT"
  }
}